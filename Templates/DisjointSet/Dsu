 static class Dsu {
      int[] parent, size;

      public Dsu(int len) {
         parent = new int[len + 1];
         size = new int[len + 1];
         Arrays.fill(parent, -1);
         Arrays.fill(size, 1);
      }

      public boolean unite(int a, int b) {
         int p1 = find(a), p2 = find(b);
         if (p1 == p2)
            return false;
         if (size[p1] < size[p2])
            p1 = p2 ^ p1 ^ (p2 = p1);
         parent[p2] = p1;
         size[p1] += size[p2];
         size[p2] = 0;
         return true;
      }

      public int find(int node) {
         if (parent[node] == -1)
            return node;
         return parent[node] = find(parent[node]);
      }
   }